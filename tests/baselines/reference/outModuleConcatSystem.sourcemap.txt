===================================================================
JsFile: all.js
mapUrl: all.js.map
sourceRoot: 
sources: tests/cases/compiler/ref/a.ts,tests/cases/compiler/b.ts
===================================================================
-------------------------------------------------------------------
emittedFile:all.js
sourceFile:tests/cases/compiler/ref/a.ts
-------------------------------------------------------------------
>>>var __extends = (this && this.__extends) || function (d, b) {
>>>    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
>>>    function __() { this.constructor = d; }
>>>    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
>>>};
>>>System.register("tests/cases/compiler/ref/a", [], function(exports_1) {
>>>    var A;
>>>    return {
>>>        setters:[],
>>>        execute: function() {
>>>            A = (function () {
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(11, 13) Source(2, 1) + SourceIndex(0)
---
>>>                function A() {
1->^^^^^^^^^^^^^^^^
2 >                ^^->
1->
1->Emitted(12, 17) Source(2, 1) + SourceIndex(0) name (A)
---
>>>                }
1->^^^^^^^^^^^^^^^^
2 >                ^
3 >                 ^^^^^^^^^->
1->export class A { 
2 >                }
1->Emitted(13, 17) Source(2, 18) + SourceIndex(0) name (A.constructor)
2 >Emitted(13, 18) Source(2, 19) + SourceIndex(0) name (A.constructor)
---
>>>                return A;
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^
1->
2 >                }
1->Emitted(14, 17) Source(2, 18) + SourceIndex(0) name (A)
2 >Emitted(14, 25) Source(2, 19) + SourceIndex(0) name (A)
---
>>>            })();
1 >^^^^^^^^^^^^
2 >            ^
3 >             
4 >             ^^^^
5 >                 ^^^^^^^^^^^^^^->
1 >
2 >            }
3 >             
4 >             export class A { }
1 >Emitted(15, 13) Source(2, 18) + SourceIndex(0) name (A)
2 >Emitted(15, 14) Source(2, 19) + SourceIndex(0) name (A)
3 >Emitted(15, 14) Source(2, 1) + SourceIndex(0)
4 >Emitted(15, 18) Source(2, 19) + SourceIndex(0)
---
>>>            exports_1("A", A);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^
3 >                             ^
1->
2 >            export class A { }
3 >                             
1->Emitted(16, 13) Source(2, 1) + SourceIndex(0)
2 >Emitted(16, 30) Source(2, 19) + SourceIndex(0)
3 >Emitted(16, 31) Source(2, 19) + SourceIndex(0)
---
-------------------------------------------------------------------
emittedFile:all.js
sourceFile:tests/cases/compiler/b.ts
-------------------------------------------------------------------
>>>        }
>>>    }
>>>});
>>>System.register("tests/cases/compiler/b", ["tests/cases/compiler/ref/a"], function(exports_2) {
>>>    var a_1;
>>>    var B;
>>>    return {
>>>        setters:[
>>>            function (a_1_1) {
>>>                a_1 = a_1_1;
>>>            }],
>>>        execute: function() {
>>>            B = (function (_super) {
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >import {A} from "./ref/a";
  >
1 >Emitted(29, 13) Source(2, 1) + SourceIndex(1)
---
>>>                __extends(B, _super);
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^^^^^^^^^^^^^^
1->export class B extends 
2 >                A
1->Emitted(30, 17) Source(2, 24) + SourceIndex(1) name (B)
2 >Emitted(30, 38) Source(2, 25) + SourceIndex(1) name (B)
---
>>>                function B() {
1 >^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
1 >Emitted(31, 17) Source(2, 1) + SourceIndex(1) name (B)
---
>>>                    _super.apply(this, arguments);
1->^^^^^^^^^^^^^^^^^^^^
2 >                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->export class B extends 
2 >                    A
1->Emitted(32, 21) Source(2, 24) + SourceIndex(1) name (B.constructor)
2 >Emitted(32, 51) Source(2, 25) + SourceIndex(1) name (B.constructor)
---
>>>                }
1 >^^^^^^^^^^^^^^^^
2 >                ^
3 >                 ^^^^^^^^^->
1 > { 
2 >                }
1 >Emitted(33, 17) Source(2, 28) + SourceIndex(1) name (B.constructor)
2 >Emitted(33, 18) Source(2, 29) + SourceIndex(1) name (B.constructor)
---
>>>                return B;
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^
1->
2 >                }
1->Emitted(34, 17) Source(2, 28) + SourceIndex(1) name (B)
2 >Emitted(34, 25) Source(2, 29) + SourceIndex(1) name (B)
---
>>>            })(a_1.A);
1 >^^^^^^^^^^^^
2 >            ^
3 >             
4 >             ^^
5 >               ^^^^^
6 >                    ^^
7 >                      ^^^^^^^^^->
1 >
2 >            }
3 >             
4 >             export class B extends 
5 >               A
6 >                     { }
1 >Emitted(35, 13) Source(2, 28) + SourceIndex(1) name (B)
2 >Emitted(35, 14) Source(2, 29) + SourceIndex(1) name (B)
3 >Emitted(35, 14) Source(2, 1) + SourceIndex(1)
4 >Emitted(35, 16) Source(2, 24) + SourceIndex(1)
5 >Emitted(35, 21) Source(2, 25) + SourceIndex(1)
6 >Emitted(35, 23) Source(2, 29) + SourceIndex(1)
---
>>>            exports_2("B", B);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^
3 >                             ^
1->
2 >            export class B extends A { }
3 >                             
1->Emitted(36, 13) Source(2, 1) + SourceIndex(1)
2 >Emitted(36, 30) Source(2, 29) + SourceIndex(1)
3 >Emitted(36, 31) Source(2, 29) + SourceIndex(1)
---
>>>        }
>>>    }
>>>});
>>>//# sourceMappingURL=all.js.map