=== tests/cases/conformance/expressions/typeGuards/typeGuardTautologicalConsistiency.ts ===
let stringOrNumber: string | number;
>stringOrNumber : string | number

if (typeof stringOrNumber === "number") {
>typeof stringOrNumber === "number" : boolean
>typeof stringOrNumber : string
>stringOrNumber : string | number
>"number" : string

    if (typeof stringOrNumber !== "number") {
>typeof stringOrNumber !== "number" : boolean
>typeof stringOrNumber : string
>stringOrNumber : number
>"number" : string

        stringOrNumber;
>stringOrNumber : string | number
    }
}

if (typeof stringOrNumber === "number" && typeof stringOrNumber !== "number") {
>typeof stringOrNumber === "number" && typeof stringOrNumber !== "number" : boolean
>typeof stringOrNumber === "number" : boolean
>typeof stringOrNumber : string
>stringOrNumber : string | number
>"number" : string
>typeof stringOrNumber !== "number" : boolean
>typeof stringOrNumber : string
>stringOrNumber : number
>"number" : string

    stringOrNumber;
>stringOrNumber : string | number
}

